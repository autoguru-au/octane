// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`react preset when production should match the snapshot for fixture asFunction.jsx 1`] = `
"import { jsx as _jsx } from \\"react/jsx-runtime\\";
import React, { memo } from 'react';

var _ref = /*#__PURE__*/_jsx(\\"h1\\", {
  children: \\"test\\"
});

export const Test = /*#__PURE__*/memo(function () {
  return _ref;
});

var _ref2 = /*#__PURE__*/_jsx(\\"h1\\", {
  children: \\"test\\"
});

export const Test2 = /*#__PURE__*/memo(function Named() {
  return _ref2;
});"
`;

exports[`react preset when production should match the snapshot for fixture conditionalMemo.jsx 1`] = `
"import { jsx as _jsx } from \\"react/jsx-runtime\\";
import React, { memo } from 'react';

var _ref = /*#__PURE__*/_jsx(\\"h1\\", {
  children: \\"test a\\"
});

var _ref2 = /*#__PURE__*/_jsx(\\"h1\\", {
  children: \\"test b\\"
});

export const Test = something ? /*#__PURE__*/memo(() => _ref) : /*#__PURE__*/memo(() => _ref2);"
`;

exports[`react preset when production should match the snapshot for fixture deepMemo.jsx 1`] = `
"import { jsx as _jsx } from \\"react/jsx-runtime\\";
import React, { memo } from 'react';

const test = () => {
  return factory(someProp => {
    var _ref = /*#__PURE__*/_jsx(\\"h1\\", {
      children: someProp
    });

    return /*#__PURE__*/memo(() => _ref);
  });
};

const test2 = () => {
  return factory(someProp => {
    var _ref2 = /*#__PURE__*/_jsx(\\"h1\\", {
      children: someProp
    });

    const WrappedFn = () => _ref2;

    WrappedFn.displayName = 'boom bang, click clak';
    return /*#__PURE__*/memo(WrappedFn);
  });
};"
`;

exports[`react preset when production should match the snapshot for fixture defaultExportMemo.jsx 1`] = `
"import { jsx as _jsx } from \\"react/jsx-runtime\\";
import React, { memo } from 'react';

var _ref = /*#__PURE__*/_jsx(\\"h1\\", {
  children: \\"test\\"
});

export default /*#__PURE__*/memo(() => _ref);"
`;

exports[`react preset when production should match the snapshot for fixture memoPassedIn.jsx 1`] = `
"import { jsx as _jsx } from \\"react/jsx-runtime\\";
import React, { memo } from 'react';

var _ref = /*#__PURE__*/_jsx(\\"h1\\", {
  children: \\"test\\"
});

export const Test = withData( /*#__PURE__*/memo(() => _ref));"
`;

exports[`react preset when production should match the snapshot for fixture memoWithDestructure.jsx 1`] = `
"import { jsx as _jsx } from \\"react/jsx-runtime\\";
import { memo } from 'react';

var _ref = /*#__PURE__*/_jsx(\\"h1\\", {
  children: \\"test\\"
});

const TestMemo = /*#__PURE__*/memo(() => _ref);"
`;

exports[`react preset when production should match the snapshot for fixture standardReact.jsx 1`] = `
"import { jsx as _jsx } from \\"react/jsx-runtime\\";
import { jsxs as _jsxs } from \\"react/jsx-runtime\\";
import React, { memo } from 'react';

class GreetSomeone extends React.Component {
  render() {
    return /*#__PURE__*/_jsxs(\\"div\\", {
      children: [this.props.greeting, \\" \\", this.props.subject, \\"!\\"]
    });
  }

}

var _ref = /*#__PURE__*/_jsx(\\"label\\", {
  htmlFor: \\"greeting\\",
  children: \\"Greeting: \\"
});

function App() {
  const [greeting, setGreeting] = React.useState('HELLO');

  function handleGreetingChange(event) {
    const input = event.target;
    const newGreeting = input.value.toUpperCase();
    setGreeting(newGreeting);
  }

  return /*#__PURE__*/_jsxs(\\"form\\", {
    children: [/*#__PURE__*/_jsxs(\\"div\\", {
      children: [_ref, /*#__PURE__*/_jsx(\\"input\\", {
        id: \\"greeting\\",
        onChange: handleGreetingChange,
        value: greeting
      })]
    }), /*#__PURE__*/_jsx(\\"div\\", {
      children: /*#__PURE__*/_jsx(GreetSomeone, {
        greeting: greeting,
        subject: \\"Nancy\\"
      })
    })]
  });
}

var _ref2 = /*#__PURE__*/_jsx(\\"h1\\", {
  children: \\"test\\"
});

const MemoTest = /*#__PURE__*/memo(() => _ref2);"
`;

exports[`react preset when production should match the snapshot for fixture usingReactMemo.jsx 1`] = `
"import { jsx as _jsx } from \\"react/jsx-runtime\\";
import React from 'react';

var _ref = /*#__PURE__*/_jsx(\\"h1\\", {
  children: \\"test\\"
});

export const TestMemo = /*#__PURE__*/React.memo(() => _ref);"
`;

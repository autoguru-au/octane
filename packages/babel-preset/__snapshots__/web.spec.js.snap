// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`web preset should allow for cjs modules 1`] = `
"\\"use strict\\";

var _interopRequireDefault = require(\\"@babel/runtime/helpers/interopRequireDefault\\");

require(\\"core-js/modules/es6.object.assign\\");

var _createClass2 = _interopRequireDefault(require(\\"@babel/runtime/helpers/createClass\\"));

require(\\"core-js/modules/web.dom.iterable\\");

require(\\"core-js/modules/es6.array.iterator\\");

require(\\"core-js/modules/es6.object.to-string\\");

require(\\"core-js/modules/es6.string.iterator\\");

require(\\"core-js/modules/es6.map\\");

var _Object$assign;

var myVar = new Map([]);

var TestClass =
/*#__PURE__*/
function () {
  function TestClass() {
    this.prop = 'prop';
  }

  (0, _createClass2.default)(TestClass, [{
    key: \\"getterProp\\",
    get: function get() {
      return 'getter prop';
    }
  }]);
  return TestClass;
}();

TestClass.staticProp = 'static prop';
var objectA = {
  a: 'a',
  b: 'b'
};
var d = 'd';
var objectB = Object.assign({}, objectA, (_Object$assign = {
  c: 'c'
}, _Object$assign[d] = 'd', _Object$assign));"
`;

exports[`web preset should allow for corejs override 1`] = `
"\\"use strict\\";

import _Object$assign from \\"@babel/runtime-corejs3/core-js-stable/object/assign\\";
import _createClass from \\"@babel/runtime-corejs3/helpers/createClass\\";
import _Map from \\"@babel/runtime-corejs3/core-js-stable/map\\";

var _Object$assign2;

var myVar = new _Map([]);

var TestClass =
/*#__PURE__*/
function () {
  function TestClass() {
    this.prop = 'prop';
  }

  _createClass(TestClass, [{
    key: \\"getterProp\\",
    get: function get() {
      return 'getter prop';
    }
  }]);

  return TestClass;
}();

TestClass.staticProp = 'static prop';
var objectA = {
  a: 'a',
  b: 'b'
};
var d = 'd';

var objectB = _Object$assign({}, objectA, (_Object$assign2 = {
  c: 'c'
}, _Object$assign2[d] = 'd', _Object$assign2));"
`;

exports[`web preset should match the snapshot 1`] = `
"\\"use strict\\";

import \\"core-js/modules/es6.object.assign\\";
import _createClass from \\"@babel/runtime/helpers/createClass\\";
import \\"core-js/modules/web.dom.iterable\\";
import \\"core-js/modules/es6.array.iterator\\";
import \\"core-js/modules/es6.object.to-string\\";
import \\"core-js/modules/es6.string.iterator\\";
import \\"core-js/modules/es6.map\\";

var _Object$assign;

var myVar = new Map([]);

var TestClass =
/*#__PURE__*/
function () {
  function TestClass() {
    this.prop = 'prop';
  }

  _createClass(TestClass, [{
    key: \\"getterProp\\",
    get: function get() {
      return 'getter prop';
    }
  }]);

  return TestClass;
}();

TestClass.staticProp = 'static prop';
var objectA = {
  a: 'a',
  b: 'b'
};
var d = 'd';
var objectB = Object.assign({}, objectA, (_Object$assign = {
  c: 'c'
}, _Object$assign[d] = 'd', _Object$assign));"
`;
